spring:
 application:
   name: api-gateway
 cloud:
   gateway:
       routes:
         - id: product-microservice
           uri: lb://PRODUCT-MICROSERVICE
           predicates:
             - Path=/product/**

         - id: booking-microservice
           uri: lb://BOOKING-MICROSERVICE
           predicates:
             - Path=/booking/**

         - id: file-microservice
           uri: lb://FILE-MICROSERVICE
           predicates:
            - Path=/file/**

         - id: discovery-service
           uri: http://discovery-service:8761
           predicates:
              - Path=/eurka/web
           filters:
              - SetPath=/

         - id: discovery-service-static
           uri: http://discovery-service:8761
           predicates:
              - Path=/eurka/**

       default-filters:
          - SaveSession
          - TokenRelay

 security:
   oauth2:
     client:
      provider:
        keycloak:
          issuer-uri: http://localhost:8090/realms/oauth2-realm
      registration:
        keycloak:
          provider: keycloak
          client-id: microservices_client
          client-secret: yshlFWZoyk3ZsjKusbL691gA76nkD6tA
          scope: openid
          authorization-grant-type: authorization_code
          redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'




eureka:
 client:
  service-url:
   defaultZone: http://julian:password@discovery-service:8761/eureka/
 instance:
   instance-id: ${spring.application.name}:${random.uuid}

server:
  port: 8080 


