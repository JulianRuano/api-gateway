spring:
 application:
   name: api-gateway
 cloud:
   gateway:
      mvc:
       routes:
         - id: product-microservice
           uri: lb://PRODUCT-MICROSERVICE
           predicates:
             - Path=/product/**

         - id: booking-microservice
           uri: lb://BOOKING-MICROSERVICE
           predicates:
             - Path=/booking/**

         - id: file-microservice
           uri: lb://FILE-MICROSERVICE
           predicates:
            - Path=/file/**

# security:
#    oauth2:
#      resourceserver:
#        jwt:
#          jwk-set-uri: http://keycloak:8080/realms/mycompany-microservices-realm/protocol/openid-connect/certs
#          issuer-uri: http://keycloak:8080/realms/mycompany-microservices-realm

 security:
   oauth2:
     resourceserver:
       jwt:
         issuer-uri: http://localhost:9090/realms/springboot-microservice-realm
         jwk-set-uri: http://keycloak:8080/realms/mycompany-microservices-realm/protocol/openid-connect/certs
eureka:
 client:
  service-url:
   defaultZone: http://discovery-service:8761/eureka/
 instance:
   instance-id: ${spring.application.name}:${random.uuid}

server:
  port: 8080 

jwt:
  auth:
    converter:
      principle-attribute: preferred_username
      resource-id: spring-cloud-gateway-client
